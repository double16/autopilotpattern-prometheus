#!/bin/bash -e

. ./hooks/env

JQ="docker run --rm -i articulate/jq"

COMPOSE_PROJECT=promtest

function retry {
  local retry_max=$1
  shift

  local count=$retry_max
  while [ $count -gt 0 ]; do
    "$@" && break
    count=$(($count - 1))
    sleep 1
  done

  [ $count -eq 0 ] && {
    echo "Retry failed [$retry_max]: $@" >&2
    return 1
  }
  return 0
}

function finish {
  RESULT=$?
  docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml logs
  docker ps | grep ${COMPOSE_PROJECT}
  docker exec ${COMPOSE_PROJECT}_consul_1 curl -s http://localhost:8500/v1/health/state/critical | ${JQ} .
  docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml exec consul consul members || true
  docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml down
  [ $RESULT = 0 ] && echo "PASS" || echo "FAIL"
}
trap finish EXIT

function passing_service {
  echo -n "Testing if service '$1' is healthy ... "
  docker run --rm --network container:${COMPOSE_PROJECT}_consul_1 appropriate/curl -s http://localhost:8500/v1/health/state/passing | grep -q "ServiceName.*$1"
  RESULT=$?
  [ $RESULT = 0 ] && echo "PASS" || echo "FAIL"
  return $RESULT
}

function until_started {
  while docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml ps -q | xargs docker inspect | ${JQ} -r .[].State.Health.Status | grep -q starting; do
    echo "Waiting for services to start ..."
    sleep 15s
  done
}

function test_suite {
  echo "Running tests ..."
  retry 30 docker run --rm --network container:${COMPOSE_PROJECT}_prometheus_1 appropriate/nc -z -w 10 localhost 9090

  retry 60 passing_service prometheus

  retry 5 passing_service containerpilot
  retry 5 docker exec ${COMPOSE_PROJECT}_prometheus_1 wget -O /dev/null http://localhost:9090/metrics

  retry 5 passing_service node-exporter
  retry 5 docker exec ${COMPOSE_PROJECT}_prometheus_1 wget -O /dev/null http://localhost:9100/metrics
}

export IMAGE_NAME

docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml up -d --scale consul=3
until_started
test_suite

docker-compose -p ${COMPOSE_PROJECT} -f hooks/docker-compose.yml restart
until_started
test_suite
